version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: saas_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - saas_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env.local
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - saas_network

  prometheus:
    build:
      context: ./monitoring/prometheus
      dockerfile: Dockerfile
    container_name: prometheus
    ports:
      - "9090:9090"
    env_file:
      - ./monitoring/prometheus/.env.local
    volumes:
      - ./monitoring/prometheus:/etc/prometheus/template  # Mount config file
    networks:
      - saas_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.local
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - saas_network
    depends_on:
      - backend

volumes:
  postgres_data:

networks:
  saas_network:
    driver: bridge